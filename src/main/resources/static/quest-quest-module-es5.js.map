{"version":3,"sources":["src/app/modules/quest/components/quest-flow.component.html","src/app/modules/quest/components/quest-step-cube.component.html","src/app/modules/quest/quest.component.html","src/app/modules/quest/components/quest-flow.component.ts","src/app/modules/quest/components/quest-step-cube.component.ts","src/app/modules/quest/quest.component.ts","src/app/modules/quest/quest.module.ts","src/app/modules/quest/services/quest-flow.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"spq-quest-flow__inner\\\">\\n    <div class=\\\"spq-quest-flow__name\\\">\\n        {{values.name}}\\n    </div>\\n    <div class=\\\"spq-quest-flow__flow\\\">\\n        <spq-quest-step-cube class=\\\"spq-quest-flow__flow-cube\\\"\\n                             *ngFor=\\\"let node of values.nodes; trackBy:  _trackCubeById\\\"\\n                             [id]=\\\"node.id\\\"\\n                             [title]=\\\"node.title\\\"\\n                             [subtitle]=\\\"node.subtitle\\\"\\n                             [serialNumber]=\\\"node.serialNumber\\\"\\n                             [disabled]=\\\"!node.passed && values.currentTaskId !== node.id\\\"\\n                             [selected]=\\\"values.currentTaskId === node.id\\\"\\n                             [highlighted]=\\\"node.passed\\\"\\n                             (onClick)=\\\"_navigateToClickedQuestDetails($event)\\\">\\n        </spq-quest-step-cube>\\n    </div>\\n</div>\\n\"","export default \"<div class=\\\"spq-quest-step-cube__inner\\\"\\n     matRipple\\n     [class.disabled]=\\\"disabled\\\"\\n     [class.selected]=\\\"selected\\\"\\n     [class.highlighted]=\\\"highlighted\\\"\\n     (click)=\\\"_onStepCubeClick()\\\">\\n    <div class=\\\"spq-quest-step-cube__text\\\">\\n        <div class=\\\"spq-quest-step-cube__text-title\\\">\\n            {{title}}\\n        </div>\\n        <div class=\\\"spq-quest-step-cube__text-subtitle\\\">\\n            {{subtitle}}\\n        </div>\\n    </div>\\n    <div class=\\\"spq-quest-step-cube__serial-number\\\">\\n        {{serialNumber}}\\n    </div>\\n</div>\\n<div *ngIf=\\\"disabled\\\"\\n     class=\\\"spq-quest-step-cube__lock\\\">\\n    <svg width=\\\"80px\\\" height=\\\"80px\\\">\\n        <use xlink:href=\\\"#icon-lock\\\"/>\\n    </svg>\\n</div>\\n\"","export default \"<div class=\\\"spq-quest__inner\\\">\\n    <div class=\\\"spq-quest__flow\\\"\\n         *ngFor=\\\"let questFlow of _questFlows\\\">\\n        <spq-quest-flow [values]=\\\"questFlow\\\"\\n                        [config]=\\\"null\\\">\\n        </spq-quest-flow>\\n    </div>\\n</div>\\n\"","import {Component, HostBinding, Input, OnInit} from \"@angular/core\";\nimport {ID} from \"../../../core/base.types\";\nimport {SPQQuestFlow, SPQQuestTaskBrief} from \"../../../core/models/quest-task.type\";\nimport {SQPQuestFlowService} from \"../services/quest-flow.service\";\nimport {SPQQuestFlowConfig} from \"../types/quest-flow.type\";\n\n@Component({\n    selector: \"spq-quest-flow\",\n    templateUrl: \"quest-flow.component.html\",\n})\nexport class SPQQuestFlowComponent implements OnInit {\n\n    @Input()\n    public values: SPQQuestFlow;\n\n    @Input()\n    public config: SPQQuestFlowConfig;\n\n    @HostBinding(\"class.spq-quest-flow\")\n    private hostClass: boolean = true;\n\n    constructor(private questService: SQPQuestFlowService) {\n    }\n\n    public ngOnInit(): void {}\n\n    public _trackCubeById(index, node: SPQQuestTaskBrief): string {\n        return node.id.toString();\n    }\n\n    public _navigateToClickedQuestDetails(questId: ID): void {\n        this.questService.navigateToQuestDetails(questId);\n    }\n}\n","import {ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output} from \"@angular/core\";\nimport {ID} from \"../../../core/base.types\";\n\n@Component({\n    selector: \"spq-quest-step-cube\",\n    templateUrl: \"quest-step-cube.component.html\",\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SPQQuestStepCubeComponent {\n\n    @Input()\n    public title: string;\n\n    @Input()\n    public subtitle: string;\n\n    @Input()\n    public serialNumber: number;\n\n    @Input()\n    public selected: boolean = false;\n\n    @Input()\n    public disabled: boolean = false;\n\n    @Input()\n    public highlighted: boolean = false;\n\n    @Input()\n    public id: ID;\n\n    @Output()\n    public onClick: EventEmitter<ID> = new EventEmitter<ID>();\n\n    @HostBinding(\"class.spq-quest-step-cube\")\n    private hostClass: boolean = true;\n\n    public _onStepCubeClick(): void {\n        if (!this.disabled) {\n            this.onClick.emit(this.id);\n        }\n    }\n}\n","import {Component, HostBinding, OnDestroy, OnInit} from \"@angular/core\";\nimport {Subscription} from \"rxjs\";\nimport {tap} from \"rxjs/operators\";\nimport {SPQQuestFlow} from \"../../core/models/quest-task.type\";\nimport {SQPQuestFlowService} from \"./services/quest-flow.service\";\n\n@Component({\n    selector: \"spq-quest\",\n    templateUrl: \"quest.component.html\",\n})\nexport class SPQQuesComponent implements OnInit, OnDestroy {\n\n    public _questFlows: SPQQuestFlow[] = [];\n\n    private subscriptions: Subscription[] = [];\n\n    @HostBinding(\"class.spq-quest\")\n    private hostClass: boolean = true;\n\n    constructor(private service: SQPQuestFlowService) {\n    }\n\n    public ngOnInit(): void {\n        this.subscribeToGetQuestFlow();\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\n    }\n\n    private subscribeToGetQuestFlow(): void {\n        this.subscriptions.push(\n            this.service.getAllQuestFlow()\n            .pipe(\n                tap(flow => {\n                    this._questFlows = flow;\n                })\n            )\n            .subscribe()\n        );\n    }\n}\n","import {CommonModule} from \"@angular/common\";\nimport {NgModule, Type} from \"@angular/core\";\nimport {MatRippleModule} from \"@angular/material\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {SQPQuestFlowDataService} from \"../../services/data/quest-data-flow.service\";\nimport {SPQQuestFlowComponent} from \"./components/quest-flow.component\";\nimport {SPQQuestStepCubeComponent} from \"./components/quest-step-cube.component\";\nimport {SPQQuesComponent} from \"./quest.component\";\nimport {SQPQuestFlowService} from \"./services/quest-flow.service\";\n\nconst QuestRoutes: Routes = [\n    {\n        path: \"\",\n        component: SPQQuesComponent\n    }\n];\n\nconst matModules: Array<Type<any>> = [\n    MatRippleModule\n];\n\n@NgModule({\n    declarations: [\n        SPQQuesComponent,\n        SPQQuestStepCubeComponent,\n        SPQQuestFlowComponent\n    ],\n    exports: [\n        SPQQuesComponent\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(QuestRoutes),\n        ...matModules\n    ],\n    providers: [\n        SQPQuestFlowDataService,\n        SQPQuestFlowService\n    ]\n\n})\nexport class SPQQuestModule {}\n","import {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs\";\nimport {SPQRoutesMap, SPQRoutesString} from \"../../../app-routers\";\nimport {ID} from \"../../../core/base.types\";\nimport {SPQQuestFlow} from \"../../../core/models/quest-task.type\";\nimport {SQPQuestFlowDataService} from \"../../../services/data/quest-data-flow.service\";\nimport {SPQNavigationService} from \"../../../services/navigation.service\";\n\n@Injectable()\nexport class SQPQuestFlowService {\n\n    constructor(private dataFlowService: SQPQuestFlowDataService,\n                private navigationService: SPQNavigationService) {\n    }\n\n    public getAllQuestFlow(): Observable<SPQQuestFlow[]> {\n        return this.dataFlowService.getAllQuestFlow();\n    }\n\n    public navigateToQuestDetails(questId: ID): void {\n        this.navigationService.navigateTo(SPQRoutesMap[SPQRoutesString.SPQ_QUEST] + \"/\" + questId);\n    }\n}\n"],"sourceRoot":"webpack:///","file":"quest-quest-module-es5.js"}