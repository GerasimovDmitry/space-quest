{"version":3,"sources":["src/app/modules/user-profile/user-profile.component.html","src/app/modules/user-profile/services/user.service.ts","src/app/modules/user-profile/user-profile.component.ts","src/app/modules/user-profile/user-profile.module.ts","src/app/services/data/abstract-data.service.ts","src/app/services/data/user-data.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"spq-user-profile__inner\\\">\\n    <span>User Profile</span>\\n    <br>\\n    Not Implemented\\n</div>\\n\\n\"","import {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs\";\nimport {SPQUserModel} from \"../../../core/models/user.model\";\nimport {SQPUserDataService} from \"../../../services/data/user-data.service\";\nimport {SPQStorageService} from \"../../../services/storage.service\";\n\n@Injectable()\nexport class SPQUserService {\n    constructor(private userDataService: SQPUserDataService,\n                private storageService: SPQStorageService) {\n    }\n\n    public getUser(): Observable<SPQUserModel> {\n        return this.userDataService.getUserByLogin();\n    }\n}\n","import {Component, HostBinding} from \"@angular/core\";\nimport {finalize, tap} from \"rxjs/operators\";\nimport {SPQUserModel} from \"../../core/models/user.model\";\nimport {SPQUserService} from \"./services/user.service\";\n\n@Component({\n    selector: \"spq-user-profile\",\n    templateUrl: \"user-profile.component.html\",\n    providers: [\n        SPQUserService\n    ]\n})\nexport class SPQUserProfileComponent {\n\n    public _user: SPQUserModel;\n\n    private loading: boolean = false;\n\n    @HostBinding(\"class.spq-user-profile\")\n    private hostClass: boolean = true;\n\n    constructor(private service: SPQUserService) {\n        this.subscribeToGetUser();\n    }\n\n    private subscribeToGetUser(): void {\n        this.loading = true;\n        this.service.getUser()\n            .pipe(\n                tap(user => {\n                    this._user = user;\n                    console.log(user);\n                }),\n                finalize(() => {\n                    this.loading = false;\n                })\n            )\n            .subscribe();\n    }\n}\n","import {CommonModule} from \"@angular/common\";\nimport {NgModule} from \"@angular/core\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {SQPUserDataService} from \"../../services/data/user-data.service\";\nimport {SPQUserProfileComponent} from \"./user-profile.component\";\n\nconst UserProfileRoutes: Routes = [\n    {\n        path: \"\",\n        component: SPQUserProfileComponent\n    }\n];\n\n@NgModule({\n    declarations: [\n        SPQUserProfileComponent\n    ],\n    exports: [\n        SPQUserProfileComponent\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(UserProfileRoutes)\n    ],\n    providers: [\n        SQPUserDataService\n    ]\n})\nexport class SPQUserProfileModule {}\n","import {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {Inject} from \"@angular/core\";\nimport {Observable} from \"rxjs\";\nimport {SPQ_APP_API_CONFIG, SPQAppAPIConfig} from \"../../app.config\";\n\nexport const defaultHttpOptions = {\n    headers: new HttpHeaders({ \"Content-Type\": \"application/json\" }),\n    observe: \"body\",\n    responseType: \"json\"\n};\n\nexport class SPQDataService {\n\n    private resourcesUrl = \"image/\";\n\n    constructor(@Inject(SPQ_APP_API_CONFIG) protected config: SPQAppAPIConfig,\n                private http: HttpClient) {\n    }\n\n    public getResourcesUrl(): string {\n        // TODO -> refactoring - make service\n        return this.makeURL(this.resourcesUrl) + \"?path=\";\n    }\n\n    public get<T>(address: string, options: any = {}): Observable<T> {\n        // @ts-ignore\n        return this.http.get<T>(this.makeURL(address), { ...defaultHttpOptions, ...options});\n    }\n\n    public post<T>(address: string, value: any, options: any = {}): Observable<T> {\n        // @ts-ignore\n        return this.http.post<T>(this.makeURL(address), value, { ...defaultHttpOptions, ...options});\n    }\n\n    protected getAbsoluteAddress(): string {\n        return `${this.config.PROTOCOL}://${this.config.HOST_NAME}:${this.config.PORT}${this.config.API_ADDRESS}${this.config.API_VERSION}/`;\n    }\n\n    private makeURL(address: string): string {\n        return this.getAbsoluteAddress() + address;\n    }\n}\n","import {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs\";\nimport {SPQUserModel} from \"../../core/models/user.model\";\nimport {SPQDataService} from \"./abstract-data.service\";\n\n@Injectable()\nexport class SQPUserDataService extends SPQDataService {\n\n    private userUrl = \"user\";\n    private userLoginParam = \"login\";\n\n    public getUserByLogin(): Observable<SPQUserModel> {\n        return this.get<SPQUserModel>(this.userUrl);\n    }\n}\n"],"sourceRoot":"webpack:///","file":"user-profile-user-profile-module-es5.js"}