{"version":3,"sources":["./src/app/modules/timeline/components/card.component.html","./src/app/modules/timeline/timeline.component.html","./src/app/modules/timeline/components/card.component.ts","./src/app/modules/timeline/sevrvices/timeline.service.ts","./src/app/modules/timeline/timeline.component.ts","./src/app/modules/timeline/timeline.module.ts"],"names":[],"mappings":"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","file":"timeline-timeline-module-es2015.js","sourcesContent":["export default \"<div class=\\\"spq-card__inner\\\">\\n    <mat-card class=\\\"example-card\\\">\\n        <mat-card-header>\\n            <mat-card-title>\\n                {{flowBrief.name}}\\n            </mat-card-title>\\n        </mat-card-header>\\n        <img class=\\\"spq-card__image\\\"\\n             *ngIf=\\\"flowBrief.url\\\"\\n             [src]=\\\"_safeUrl\\\"\\n             mat-card-image\\n             alt=\\\"Preview\\\">\\n        <mat-card-content>\\n            <p>{{flowBrief.text}}</p>\\n        </mat-card-content>\\n        <mat-expansion-panel class=\\\"spq-card__e-panel _no-shadow\\\"\\n                             *ngIf=\\\"_currentTaskBrief\\\"\\n                             (expandedChange)=\\\"_isCollapsed = !$event\\\">\\n            <mat-expansion-panel-header>\\n                <mat-panel-title>\\n                    {{_isCollapsed ? 'Раверните чтбы промотреть текущее задание по этой части' : 'Текущее задание'}}\\n                </mat-panel-title>\\n            </mat-expansion-panel-header>\\n            <div class=\\\"spq-card__e-panel-content\\\">\\n                <mat-list class=\\\"spq-card__task\\\">\\n                    <mat-list-item>\\n                        <div class=\\\"spq-card__task-number\\\">\\n                            {{_currentTaskBrief.serialNumber}}\\n                        </div>\\n                        <div class=\\\"spq-card__task-text\\\">\\n                            <div class=\\\"spq-card__task-text-title\\\">\\n                                {{_currentTaskBrief.title}}</div>\\n                            <div class=\\\"spq-card__task-text-subtitle\\\">\\n                                {{_currentTaskBrief.subtitle}}\\n                            </div>\\n                        </div>\\n                    </mat-list-item>\\n                    <mat-divider class=\\\"_relative\\\"></mat-divider>\\n                </mat-list>\\n                <div class=\\\"spq-card__e-panel-actions\\\">\\n                    <button mat-raised-button\\n                            color=\\\"primary\\\"\\n                            (click)=\\\"_onNavigateToQuestDetailsClick()\\\">\\n                        Перейти к заданию\\n                    </button>\\n                </div>\\n            </div>\\n        </mat-expansion-panel>\\n    </mat-card>\\n</div>\\n\"","export default \"<div class=\\\"spq-timeline__inner\\\">\\n    <spq-card class=\\\"spq-timeline__card\\\"\\n              *ngFor=\\\"let flowBrief of _questFlowBriefs\\\"\\n              [flowBrief]=\\\"flowBrief\\\">\\n    </spq-card>\\n</div>\\n\"","import {Component, HostBinding, Input, OnInit} from \"@angular/core\";\nimport {SafeResourceUrl} from \"@angular/platform-browser\";\nimport {take, tap} from \"rxjs/operators\";\nimport {SPQRoutesMap, SPQRoutesString} from \"../../../app-routers\";\nimport {SPQQuestFlowBrief, SPQQuestTaskBrief} from \"../../../core/models/quest-task.type\";\nimport {SPQNavigationService} from \"../../../services/navigation.service\";\nimport {SPQTimelineService} from \"../sevrvices/timeline.service\";\n\n@Component({\n    selector: \"spq-card\",\n    templateUrl: \"card.component.html\",\n})\nexport class SPQCardComponent implements OnInit {\n\n    @Input()\n    public flowBrief: SPQQuestFlowBrief;\n\n    public _currentTaskBrief: SPQQuestTaskBrief;\n\n    public _safeUrl: SafeResourceUrl;\n\n    public _isCollapsed: boolean = true;\n\n    @HostBinding(\"class.spq-card\")\n    private hostClass: boolean = true;\n\n    constructor(private service: SPQTimelineService,\n                private navigationService: SPQNavigationService) {\n    }\n\n    public ngOnInit(): void {\n        this._safeUrl = this.makeImageUrl();\n        this.subscribeToGetTaskBrief();\n    }\n\n    public _onNavigateToQuestDetailsClick(): void {\n        this.navigationService.navigateTo(SPQRoutesMap[SPQRoutesString.SPQ_QUEST] + \"/\" + this.flowBrief.currentTaskId);\n    }\n\n    private makeImageUrl(): SafeResourceUrl {\n        return this.service.makeSafeImageUrl(this.flowBrief.url);\n    }\n\n    private subscribeToGetTaskBrief(): void {\n        if (this.flowBrief && this.flowBrief.currentTaskId) {\n            this.service.getTaskBriefById(this.flowBrief.currentTaskId)\n                .pipe(\n                    take(1),\n                    tap(brief => {\n                        this._currentTaskBrief = brief;\n                    })\n                )\n                .subscribe();\n        }\n    }\n}\n","import {Injectable} from \"@angular/core\";\nimport {DomSanitizer, SafeResourceUrl} from \"@angular/platform-browser\";\nimport {Observable} from \"rxjs\";\nimport {ID} from \"../../../core/base.types\";\nimport {SPQQuestFlowBrief, SPQQuestTaskBrief} from \"../../../core/models/quest-task.type\";\nimport {SQPQuestFlowDataService} from \"../../../services/data/quest-data-flow.service\";\nimport {SPQQuestDetailsDataService} from \"../../../services/data/quest-details-data.service\";\n\n@Injectable()\nexport class SPQTimelineService {\n    constructor(private questFlowDataService: SQPQuestFlowDataService,\n                private questDetailsDataService: SPQQuestDetailsDataService,\n                private sanitizer: DomSanitizer) {\n    }\n\n    public getAllQuestFlowBriefs(): Observable<SPQQuestFlowBrief[]> {\n        return this.questFlowDataService.getAllQuestFlowBriefs();\n    }\n\n    public getTaskBriefById(taskId: ID): Observable<SPQQuestTaskBrief> {\n        return this.questDetailsDataService.getQuestTaskBriefById(taskId);\n    }\n\n    public makeSafeImageUrl(imageUrl): SafeResourceUrl {\n        return this.sanitizer.bypassSecurityTrustResourceUrl(this.makeImageUrl(imageUrl));\n    }\n\n    private makeImageUrl(imageUrl: string): string {\n        return this.questFlowDataService.getResourcesUrl() + imageUrl;\n    }\n}\n","import {Component, HostBinding, OnInit} from \"@angular/core\";\nimport {tap} from \"rxjs/operators\";\nimport {SPQQuestFlowBrief} from \"../../core/models/quest-task.type\";\nimport {SPQTimelineService} from \"./sevrvices/timeline.service\";\n\n@Component({\n    selector: \"spq-timeline\",\n    templateUrl: \"timeline.component.html\",\n    providers: [\n        SPQTimelineService\n    ]\n})\nexport class SPQTimelineComponent implements OnInit {\n\n    public _questFlowBriefs: SPQQuestFlowBrief[] = [];\n\n    @HostBinding(\"class.spq-timeline\")\n    private hostClass: boolean = true;\n\n    constructor(private service: SPQTimelineService) {\n    }\n\n    public ngOnInit(): void {\n       this.subscribeToGetAllQuestFlowBriefs();\n    }\n\n    private subscribeToGetAllQuestFlowBriefs(): void {\n        this.service.getAllQuestFlowBriefs()\n            .pipe(\n                tap(briefs => {\n                    this._questFlowBriefs = briefs;\n                })\n            )\n            .subscribe();\n    }\n}\n","import {CommonModule} from \"@angular/common\";\nimport {NgModule} from \"@angular/core\";\nimport {FormsModule} from \"@angular/forms\";\nimport {MatButtonModule, MatListModule} from \"@angular/material\";\nimport {MatCardModule} from \"@angular/material/card\";\nimport {MatExpansionModule} from \"@angular/material/expansion\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {SQPQuestFlowDataService} from \"../../services/data/quest-data-flow.service\";\nimport {SPQQuestDetailsDataService} from \"../../services/data/quest-details-data.service\";\nimport {SPQCardComponent} from \"./components/card.component\";\nimport {SPQTimelineComponent} from \"./timeline.component\";\n\nconst TimelineRouters: Routes = [\n    {\n        path: \"\",\n        component: SPQTimelineComponent\n    }\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule.forChild(TimelineRouters),\n        FormsModule,\n        MatButtonModule,\n        MatCardModule,\n        MatExpansionModule,\n        MatListModule\n    ],\n    declarations: [\n        SPQTimelineComponent,\n        SPQCardComponent\n    ],\n    exports: [\n        SPQTimelineComponent\n    ],\n    providers: [\n        SQPQuestFlowDataService,\n        SPQQuestDetailsDataService\n    ]\n})\nexport class SPQTimelineModule {\n}\n"],"sourceRoot":"webpack:///"}