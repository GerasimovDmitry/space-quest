{"version":3,"sources":["./src/app/modules/quest-details/components/embed/finish-action-popup.component.html","./src/app/modules/quest-details/components/embed/hint-popup.component.html","./src/app/modules/quest-details/components/qd-answer.component.html","./src/app/modules/quest-details/components/qd-question.component.html","./src/app/modules/quest-details/quest-details.component.html","./src/app/modules/quest-details/components/embed/finish-action-popup.component.ts","./src/app/modules/quest-details/components/embed/hint-popup.component.ts","./src/app/modules/quest-details/components/qd-answer.component.ts","./src/app/modules/quest-details/components/qd-question.component.ts","./src/app/modules/quest-details/quest-details.component.ts","./src/app/modules/quest-details/quest-details.module.ts","./src/app/modules/quest-details/services/qd-navigation-helper.service.ts","./src/app/modules/quest-details/services/quest-details.service.ts","./src/app/modules/quest-details/services/quest-task.resolver.ts","./src/app/modules/quest-details/types/actions-popup-result.ts"],"names":[],"mappings":"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","file":"quest-details-quest-details-module-es2015.js","sourcesContent":["export default \"<h1 mat-dialog-title>Отлично</h1>\\n<div class=\\\"spq-finish-action-popup__inner\\\">\\n    <div class=\\\"spq-finish-action-popup__caption\\\">\\n        Вы успешно ответили на вопрос!\\n    </div>\\n        <mat-dialog-actions class=\\\"spq-finish-action-popup__buttons\\\"\\n                            align=\\\"end\\\">\\n            <button mat-button\\n                    [mat-dialog-close]=\\\"_actionsPopupResult.BACK\\\">\\n                Назад к списку\\n            </button>\\n            <button *ngIf=\\\"!_nextDisable\\\"\\n                    mat-button\\n                    color=\\\"primary\\\"\\n                    [mat-dialog-close]=\\\"_actionsPopupResult.NEXT\\\"\\n                    cdkFocusInitial>\\n                Продолжить\\n            </button>\\n        </mat-dialog-actions>\\n</div>\\n\"","export default \"<h1 mat-dialog-title>Подсказка</h1>\\n<div class=\\\"spq-hint-popup__inner\\\">\\n    <div class=\\\"spq-hint-popup__hint\\\">\\n        {{_hint}}\\n    </div>\\n    <mat-dialog-actions class=\\\"spq-hint-popup__button\\\"\\n                        align=\\\"end\\\">\\n        <button mat-button\\n                [mat-dialog-close]=\\\"true\\\"\\n                cdkFocusInitial>\\n            Ок\\n        </button>\\n    </mat-dialog-actions>\\n</div>\\n\"","export default \"<div class=\\\"spq-qd-answer__inner\\\">\\n    <div class=\\\"spq-qd-answer__bar\\\">\\n        <div class=\\\"spq-qd-answer__bar-attempts\\\">\\n            <svg *ngFor=\\\"let attempt of _attemptsModel; trackBy: _trackByAttemptSpentFn\\\">\\n                <ng-template [ngTemplateOutlet]=\\\"attempt.attemptSpent ? spentTemplate : noSpentTemplate\\\">\\n                </ng-template>\\n                <ng-template #noSpentTemplate>\\n                    <use xlink:href=\\\"#icon-rocket\\\"/>\\n                </ng-template>\\n                <ng-template #spentTemplate>\\n                    <use xlink:href=\\\"#icon-non-color-rocket\\\"/>\\n                </ng-template>\\n            </svg>\\n        </div>\\n        <div class=\\\"spq-qd-answer__bar-hints\\\"\\n             *ngFor=\\\"let used of _tooltipArray; index as i\\\"\\n             [matTooltip]=\\\"!used ? 'Вы можете воспользоваться этой подсказкой' : 'Вы уже использовали эту подсказку'\\\"\\n             [matTooltipPosition]=\\\"'after'\\\"\\n             (click)=\\\"_onHintsClick(i)\\\">\\n            <svg width=\\\"28px\\\" height=\\\"28px\\\">\\n                <use *ngIf=\\\"!used; else usedHintsTemplate\\\"\\n                     xlink:href=\\\"#icon-lamp\\\"/>\\n                <ng-template #usedHintsTemplate>\\n                    <use xlink:href=\\\"#icon-simple-lamp\\\"/>\\n                </ng-template>\\n            </svg>\\n        </div>\\n    </div>\\n    <div class=\\\"spq-qd-answer__answer\\\">\\n        <form class=\\\"spq-qd-answer__form\\\"\\n              [formGroup]=\\\"_answerFormGroupModel\\\"\\n              (ngSubmit)=\\\"_onSubmitClick(input.value)\\\">\\n            <div class=\\\"_input\\\">\\n                <mat-form-field appearance=\\\"outline\\\">\\n                    <mat-label>Ваш ответ</mat-label>\\n                    <input #input\\n                           formControlName=\\\"answerInput\\\"\\n                           matInput\\n                           placeholder=\\\"Ответ\\\">\\n                    <mat-hint *ngIf=\\\"_failureAnswer\\\">Попробуйте еще раз</mat-hint>\\n                </mat-form-field>\\n            </div>\\n            <button class=\\\"_button\\\"\\n                    type=\\\"submit\\\"\\n                    mat-raised-button color=\\\"primary\\\"\\n                    [disabled]=\\\"_localLoading || _answerFormGroupModel.invalid || !_answerFormGroupModel.dirty\\\">\\n                Отправить\\n            </button>\\n        </form>\\n    </div>\\n</div>\\n\"","export default \"<div class=\\\"spq-qd-question__inner\\\">\\n    <div class=\\\"spq-qd-question__content\\\"\\n         *ngIf=\\\"_safeUrl && _taskType\\\"\\n         [ngSwitch]=\\\"_taskType\\\">\\n        <iframe class=\\\"spq-qd-question__content-video\\\"\\n                *ngSwitchCase=\\\"_questUrlType.VIDEO\\\"\\n                [src]=\\\"_safeUrl\\\"\\n                frameborder=\\\"0\\\"\\n                allow=\\\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\\\">\\n        </iframe>\\n        <img class=\\\"spq-qd-question__content-picture\\\"\\n             *ngSwitchCase=\\\"_questUrlType.PICTURE\\\"\\n             [src]=\\\"_safeUrl\\\"\\n             importance=\\\"high\\\"\\n             alt=\\\"Question Picture\\\">\\n    </div>\\n    <div class=\\\"spq-qd-question__question\\\">\\n        <div class=\\\"spq-qd-question__question-caption\\\">\\n            {{questTask.text}}\\n        </div>\\n    </div>\\n</div>\\n\"","export default \"<div class=\\\"spq-quest-details__inner\\\">\\n    <div class=\\\"spq-quest-details__header\\\">\\n        <div class=\\\"spq-quest-details__header-caption\\\">\\n            {{_questTask?.title}}\\n        </div>\\n        <div class=\\\"spq-quest-details__header-actions\\\">\\n            <button mat-stroked-button\\n                    (click)=\\\"_onBackClick()\\\">\\n                Назад\\n            </button>\\n        </div>\\n    </div>\\n    <div class=\\\"spq-quest-details__wrapper\\\">\\n        <spq-qd-question [questTask]=\\\"_questTask\\\">\\n        </spq-qd-question>\\n        <spq-qd-answer [questTask]=\\\"_questTask\\\">\\n        </spq-qd-answer>\\n    </div>\\n</div>\\n\"","import {Component, HostBinding, Inject} from \"@angular/core\";\nimport {MAT_DIALOG_DATA} from \"@angular/material\";\nimport {SPQActionsPopupResult} from \"../../types/actions-popup-result\";\n\n@Component({\n    selector: \"spq-finish-action-popup\",\n    templateUrl: \"finish-action-popup.component.html\",\n})\nexport class SPQFinishActionPopupComponent {\n\n    public _actionsPopupResult = SPQActionsPopupResult;\n\n    public _nextDisable: boolean;\n\n    @HostBinding(\"class.spq-finish-action-popup\")\n    private hostClass: boolean = true;\n\n    constructor(@Inject(MAT_DIALOG_DATA) nextQuestDetailsExist: boolean) {\n        this._nextDisable = !nextQuestDetailsExist;\n    }\n}\n","import {Component, HostBinding, Inject} from \"@angular/core\";\nimport {MAT_DIALOG_DATA} from \"@angular/material\";\n\n@Component({\n    selector: \"spq-hint-popup\",\n    templateUrl: \"hint-popup.component.html\",\n})\nexport class SPQHintPopupComponent {\n\n    public _hint: string = \"\";\n\n    @HostBinding(\"class.spq-hint-popup\")\n    private hostClass: boolean = true;\n\n    constructor(@Inject(MAT_DIALOG_DATA) hint: string) {\n        this._hint = hint;\n    }\n}\n","import {Component, HostBinding, Input, OnChanges, OnDestroy, SimpleChanges} from \"@angular/core\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {MatDialog} from \"@angular/material\";\nimport {finalize, take, tap} from \"rxjs/operators\";\nimport {ID} from \"../../../core/base.types\";\nimport {SPQQuestTask} from \"../../../core/models/quest-task.type\";\nimport {SPQQuestDetailsNavigationService} from \"../services/qd-navigation-helper.service\";\nimport {SPQQuestDetailsService} from \"../services/quest-details.service\";\nimport {SPQActionsPopupResult} from \"../types/actions-popup-result\";\nimport {SPQFinishActionPopupComponent} from \"./embed/finish-action-popup.component\";\nimport {SPQHintPopupComponent} from \"./embed/hint-popup.component\";\n\n@Component({\n    selector: \"spq-qd-answer\",\n    templateUrl: \"qd-answer.component.html\",\n    providers: [\n        MatDialog\n    ]\n})\nexport class SPQQuestDetailsAnswerComponent implements OnChanges, OnDestroy {\n\n    public _hintsUsed: boolean = false;\n\n    public _failureAnswer: boolean = false;\n\n    public _attemptsModel = [\n        {\n            attemptSpent: false\n        },\n        {\n            attemptSpent: false\n        },\n        {\n            attemptSpent: false\n        }\n    ];\n\n    public _localLoading: boolean = false;\n\n    public _answerFormGroupModel: FormGroup;\n\n    public _tooltipArray: boolean[] = [];\n\n    @Input()\n    public questTask: SPQQuestTask;\n\n    private nextTaskId: ID = \"\";\n\n    @HostBinding(\"class.spq-qd-answer\")\n    private hostClass: boolean = true;\n\n    constructor(private dialogService: MatDialog,\n                private questDetailsService: SPQQuestDetailsService,\n                private navigationService: SPQQuestDetailsNavigationService) {\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes[\"questTask\"]) {\n            this.initAnswerForm();\n            this.subscribeToGetTooltipsCount();\n        }\n    }\n\n    public s() {\n        this.initAnswerForm();\n        this.subscribeToGetTooltipsCount();\n    }\n\n    public _onSubmitClick(answer: string): void {\n        this.subscribeToCheckAnswer(answer);\n    }\n\n    public _onHintsClick(count: number) {\n        if (!this._tooltipArray[count]) {\n            this._tooltipArray[count] = true;\n            this.openHintsDialog(count);\n        }\n    }\n\n    public _trackByAttemptSpentFn(index: number, attempt): string {\n        return \"\" + index + attempt.attemptSpent.toString();\n    }\n\n    public ngOnDestroy() {\n        // this.subscription.forEach(el => el.unsubscribe());\n    }\n\n    private initAnswerForm(): void {\n        this._answerFormGroupModel = new FormGroup({\n            answerInput: new FormControl(\"\", [Validators.required, Validators.min(1)])\n        });\n    }\n\n    private subscribeToGetTooltipsCount(): void {\n        this.questDetailsService.getQuestTooltipCountByLvl(this.questTask.uuid)\n            .pipe(\n                take(1),\n                tap(count => {\n                    this._tooltipArray = new Array(count).fill(false);\n                })\n            )\n            .subscribe();\n    }\n\n    private updateAttemptsModel(): void {\n        this._attemptsModel.pop();\n        this._attemptsModel.unshift({\n            attemptSpent: true\n        });\n    }\n\n    private subscribeToCheckAnswer(answer: string): void {\n        this._localLoading = true;\n        this.questDetailsService.setQuestAnswer(this.questTask.uuid, answer)\n            .pipe(\n                take(1),\n                tap(response => {\n                    this._failureAnswer = !response.isPassed;\n                    if (this._failureAnswer) {\n                        this.updateAttemptsModel();\n                        this.setAnswerFormError();\n                    } else {\n                        this.nextTaskId = response.currentTaskId;\n                        this.clearField();\n                        this.openFinishDialogAndSubscribeToClose(!response.isAllPassed && !!response.currentTaskId);\n                    }\n                }),\n                finalize(() => {\n                    this._localLoading = false;\n                })\n            )\n            .subscribe();\n    }\n\n    private setAnswerFormError(): void {\n        this._answerFormGroupModel.controls[\"answerInput\"].setErrors({ [\"answerError\"]: \"Ответ не верный\" });\n    }\n\n    private clearField(): void {\n        this._answerFormGroupModel.patchValue({\n            answerInput: \"\"\n        }, {\n            emitEvent: false\n        });\n    }\n\n    private openFinishDialogAndSubscribeToClose(hasNext: boolean): void {\n        this.dialogService.open<SPQFinishActionPopupComponent, boolean, SPQActionsPopupResult>(SPQFinishActionPopupComponent, {\n            data: hasNext\n        })\n            .afterClosed()\n            .pipe(\n                take(1),\n                tap(result => this.navigateFromPopupResult(result))\n            )\n            .subscribe();\n    }\n\n    private openHintsDialog(lvl: number): void {\n        this.questDetailsService.getQuestTooltipByLvl(this.questTask.uuid, lvl + 1)\n            .pipe(\n                take(1),\n                tap(hints => {\n                    this.dialogService.open(SPQHintPopupComponent, { data: hints.text });\n                })\n            )\n            .subscribe();\n    }\n\n    private navigateFromPopupResult(result: SPQActionsPopupResult): void {\n        switch (result) {\n            case SPQActionsPopupResult.BACK:\n                this.navigationService.navigateToQuestFlow();\n                break;\n            case SPQActionsPopupResult.NEXT:\n                this.nextTaskId\n                    ? this.navigationService.navigateToNextQuestDetails(this.nextTaskId)\n                    : this.navigationService.navigateToQuestFlow();\n                break;\n            default:\n                throw new Error(\"Unknown value of SPQActionsPopupResult\");\n        }\n    }\n}\n","import {Component, HostBinding, Input, OnChanges, SimpleChanges} from \"@angular/core\";\nimport {SafeUrl} from \"@angular/platform-browser\";\nimport {SPQQuestTask} from \"../../../core/models/quest-task.type\";\nimport {SPQQuestDetailsService} from \"../services/quest-details.service\";\n\nexport enum SPQQuestTaskUrlType {\n    VIDEO = \"video\",\n    PICTURE = \"picture\"\n}\n\n\n@Component({\n    selector: \"spq-qd-question\",\n    templateUrl: \"qd-question.component.html\",\n})\nexport class SPQQuestDetailsQuestionComponent implements OnChanges {\n\n    public _safeUrl: SafeUrl;\n\n    public _questUrlType = SPQQuestTaskUrlType;\n\n    public _taskType: SPQQuestTaskUrlType;\n\n    @Input()\n    public questTask: SPQQuestTask;\n\n    @HostBinding(\"class.spq-qd-question\")\n    private hostClass: boolean = true;\n\n    constructor(private questDetailsService: SPQQuestDetailsService) {}\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes[\"questTask\"]) {\n            this.setTaskType();\n            this.makeSafeUrl();\n        }\n    }\n\n    private setTaskType(): void {\n        this._taskType = this.questTask.url\n            ?  this.questTask.url.includes(\".\")\n                ? SPQQuestTaskUrlType.PICTURE\n                : SPQQuestTaskUrlType.VIDEO\n            : null;\n    }\n\n    private makeSafeUrl(): void {\n        switch (this._taskType) {\n            case SPQQuestTaskUrlType.PICTURE:\n                this._safeUrl = this.questDetailsService.makeSafeImageUrl(this.questTask.url);\n                break;\n            case SPQQuestTaskUrlType.VIDEO:\n                this._safeUrl = this.questDetailsService.makeSafeVideoUrl(this.questTask.url);\n                break;\n        }\n    }\n}\n","import {Component, HostBinding, OnInit} from \"@angular/core\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {map, tap} from \"rxjs/operators\";\nimport {SPQQuestTask} from \"../../core/models/quest-task.type\";\nimport {SPQQuestDetailsNavigationService} from \"./services/qd-navigation-helper.service\";\n\n@Component({\n    selector: \"spq-quest-details\",\n    templateUrl: \"quest-details.component.html\",\n    providers: [\n        SPQQuestDetailsNavigationService\n    ]\n})\nexport class SPQQuestDetailsComponent implements OnInit {\n\n    public _questTask: SPQQuestTask;\n\n    @HostBinding(\"class.spq-quest-details\")\n    private hostClass: boolean = true;\n\n    constructor(private route: ActivatedRoute,\n                private navigationService: SPQQuestDetailsNavigationService) {\n        this.subscribeToGetQuestTask();\n    }\n\n    public ngOnInit() {}\n\n    public _onBackClick(): void {\n        this.navigationService.back();\n    }\n\n    private subscribeToGetQuestTask(): void {\n        this.route.data\n            .pipe(\n                map((data: { questTask: SPQQuestTask }) => {\n                    return data.questTask;\n                }),\n                tap(task => {\n                    this._questTask = task;\n                })\n            )\n            .subscribe();\n    }\n}\n","import {CommonModule} from \"@angular/common\";\nimport {NgModule, Type} from \"@angular/core\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {MatButtonModule, MatDialogModule, MatInputModule, MatTabsModule, MatTooltipModule} from \"@angular/material\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {SPQQuestDetailsDataService} from \"../../services/data/quest-details-data.service\";\nimport {SPQFinishActionPopupComponent} from \"./components/embed/finish-action-popup.component\";\nimport {SPQHintPopupComponent} from \"./components/embed/hint-popup.component\";\nimport {SPQQuestDetailsAnswerComponent} from \"./components/qd-answer.component\";\nimport {SPQQuestDetailsQuestionComponent} from \"./components/qd-question.component\";\nimport {SPQQuestDetailsComponent} from \"./quest-details.component\";\nimport {SPQQuestDetailsService} from \"./services/quest-details.service\";\nimport {SPQQuestTaskResolver} from \"./services/quest-task.resolver\";\n\nconst QuestDetailsRoutes: Routes = [\n    {\n        path: \"\",\n        component: SPQQuestDetailsComponent,\n        resolve: {\n            questTask: SPQQuestTaskResolver\n        }\n    }\n];\n\nconst matModules: Array<Type<any>> = [\n    MatDialogModule,\n    MatButtonModule,\n    MatTabsModule,\n    MatInputModule,\n    MatTooltipModule\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule.forChild(QuestDetailsRoutes),\n        ReactiveFormsModule,\n        ...matModules\n    ],\n    declarations: [\n        SPQQuestDetailsComponent,\n        SPQQuestDetailsQuestionComponent,\n        SPQQuestDetailsAnswerComponent,\n        SPQFinishActionPopupComponent,\n        SPQHintPopupComponent\n    ],\n    entryComponents: [\n        SPQFinishActionPopupComponent,\n        SPQHintPopupComponent\n    ],\n    exports: [\n        SPQQuestDetailsComponent\n    ],\n    providers: [\n        SPQQuestDetailsDataService,\n        SPQQuestDetailsService,\n        SPQQuestTaskResolver\n    ]\n})\nexport class SPQQuestDetailsModule {\n}\n","import {Injectable} from \"@angular/core\";\nimport {SPQRoutesMap, SPQRoutesString} from \"../../../app-routers\";\nimport {ID} from \"../../../core/base.types\";\nimport {SPQNavigationService} from \"../../../services/navigation.service\";\nimport {SPQQuestDetailsService} from \"./quest-details.service\";\n\n@Injectable()\nexport class SPQQuestDetailsNavigationService {\n\n    constructor(private navigationService: SPQNavigationService,\n                private questDetailsService: SPQQuestDetailsService) {\n    }\n\n    public navigateToQuestFlow(): void {\n        this.navigationService.navigateTo(SPQRoutesMap[SPQRoutesString.SPQ_QUEST]);\n    }\n\n    public navigateToNextQuestDetails(nextTaskId: ID): void {\n        this.navigationService.navigateTo(SPQRoutesMap[SPQRoutesString.SPQ_QUEST] + \"/\" + nextTaskId);\n    }\n\n    public back(): void {\n        this.navigationService.back();\n    }\n}\n","import {Injectable} from \"@angular/core\";\nimport {DomSanitizer, SafeResourceUrl} from \"@angular/platform-browser\";\nimport {Observable} from \"rxjs\";\nimport {ID} from \"../../../core/base.types\";\nimport {SPQQuestTask} from \"../../../core/models/quest-task.type\";\nimport {SPQQuestDetailsDataService} from \"../../../services/data/quest-details-data.service\";\nimport {SPQQuestAnswerResponse} from \"../types/quest-answer.type\";\nimport {SPQQuestTooltip} from \"../types/quest-tooltip.type\";\n\n@Injectable()\nexport class SPQQuestDetailsService {\n\n    private readonly videoUrl: string = \"https://www.youtube.com/embed/\";\n\n    private readonly videoEndPartUrl: string = \"?loop=1&modestbranding=1&color=white\";\n\n    public constructor(private dataService: SPQQuestDetailsDataService,\n                       private sanitizer: DomSanitizer) {\n    }\n\n    public getQuestTooltipByLvl(taskId: ID, lvl: number): Observable<SPQQuestTooltip> {\n        return this.dataService.getQuestTooltipByLvl({\n            taskUUID: taskId,\n            lvl: lvl\n        });\n    }\n\n    public getQuestTooltipCountByLvl(taskId: ID): Observable<number> {\n        return this.dataService.getQuestTooltipCountByLvl(taskId);\n    }\n\n    public setQuestAnswer(taskId: ID, answer: string): Observable<SPQQuestAnswerResponse> {\n        return this.dataService.setQuestAnswer({\n            taskUUID: taskId,\n            answer: answer\n        });\n    }\n\n    public getQuestTaskById(taskId: ID): Observable<SPQQuestTask> {\n        return this.dataService.getQuestTaskById(taskId);\n    }\n\n    public makeSafeImageUrl(imageUrl): SafeResourceUrl {\n        return this.sanitizer.bypassSecurityTrustResourceUrl(this.makeImageUrl(imageUrl));\n    }\n\n    public makeSafeVideoUrl(videoUrl: string): SafeResourceUrl {\n        return this.sanitizer.bypassSecurityTrustResourceUrl(this.makeVideoUrl(videoUrl));\n    }\n\n    private makeVideoUrl(videoUrl: string): string {\n        return this.videoUrl + videoUrl + this.videoEndPartUrl;\n    }\n\n    private makeImageUrl(imageUrl: string): string {\n        return this.dataService.getResourcesUrl() + imageUrl;\n    }\n}\n","import {Injectable} from \"@angular/core\";\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from \"@angular/router\";\nimport {Observable} from \"rxjs\";\nimport {take} from \"rxjs/operators\";\nimport {SPQQuestTask} from \"../../../core/models/quest-task.type\";\nimport {SPQQuestDetailsService} from \"./quest-details.service\";\n\n@Injectable()\nexport class SPQQuestTaskResolver implements Resolve<SPQQuestTask> {\n\n    constructor(private questDetailsService: SPQQuestDetailsService) {}\n\n    public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<SPQQuestTask> | Promise<SPQQuestTask> | SPQQuestTask {\n        const taskId = route.paramMap.get(\"id\");\n        return this.questDetailsService.getQuestTaskById(taskId)\n            .pipe(\n                take(1),\n            );\n    }\n}\n","export enum SPQActionsPopupResult {\n    NEXT = \"next\",\n    BACK = \"back\"\n}\n"],"sourceRoot":"webpack:///"}