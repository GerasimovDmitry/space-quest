{"version":3,"sources":["./src/app/modules/quest/components/quest-flow.component.html","./src/app/modules/quest/components/quest-step-cube.component.html","./src/app/modules/quest/quest.component.html","./src/app/modules/quest/components/quest-flow.component.ts","./src/app/modules/quest/components/quest-step-cube.component.ts","./src/app/modules/quest/quest.component.ts","./src/app/modules/quest/quest.module.ts","./src/app/modules/quest/services/quest-flow.service.ts"],"names":[],"mappings":"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","file":"quest-quest-module-es2015.js","sourcesContent":["export default \"<div class=\\\"spq-quest-flow__inner\\\">\\n    <div class=\\\"spq-quest-flow__name\\\">\\n        {{values.name}}\\n    </div>\\n    <div class=\\\"spq-quest-flow__flow\\\">\\n        <spq-quest-step-cube class=\\\"spq-quest-flow__flow-cube\\\"\\n                             *ngFor=\\\"let node of values.nodes; trackBy:  _trackCubeById\\\"\\n                             [id]=\\\"node.id\\\"\\n                             [title]=\\\"node.title\\\"\\n                             [subtitle]=\\\"node.subtitle\\\"\\n                             [serialNumber]=\\\"node.serialNumber\\\"\\n                             [disabled]=\\\"!node.passed && values.currentTaskId !== node.id\\\"\\n                             [selected]=\\\"values.currentTaskId === node.id\\\"\\n                             [highlighted]=\\\"node.passed\\\"\\n                             (onClick)=\\\"_navigateToClickedQuestDetails($event)\\\">\\n        </spq-quest-step-cube>\\n    </div>\\n</div>\\n\"","export default \"<div class=\\\"spq-quest-step-cube__inner\\\"\\n     matRipple\\n     [class.disabled]=\\\"disabled\\\"\\n     [class.selected]=\\\"selected\\\"\\n     [class.highlighted]=\\\"highlighted\\\"\\n     (click)=\\\"_onStepCubeClick()\\\">\\n    <div class=\\\"spq-quest-step-cube__text\\\">\\n        <div class=\\\"spq-quest-step-cube__text-title\\\">\\n            {{title}}\\n        </div>\\n        <div class=\\\"spq-quest-step-cube__text-subtitle\\\">\\n            {{subtitle}}\\n        </div>\\n    </div>\\n    <div class=\\\"spq-quest-step-cube__serial-number\\\">\\n        {{serialNumber}}\\n    </div>\\n</div>\\n<div *ngIf=\\\"disabled\\\"\\n     class=\\\"spq-quest-step-cube__lock\\\">\\n    <svg width=\\\"80px\\\" height=\\\"80px\\\">\\n        <use xlink:href=\\\"#icon-lock\\\"/>\\n    </svg>\\n</div>\\n\"","export default \"<div class=\\\"spq-quest__inner\\\">\\n    <div class=\\\"spq-quest__flow\\\"\\n         *ngFor=\\\"let questFlow of _questFlows\\\">\\n        <spq-quest-flow [values]=\\\"questFlow\\\"\\n                        [config]=\\\"null\\\">\\n        </spq-quest-flow>\\n    </div>\\n</div>\\n\"","import {Component, HostBinding, Input, OnInit} from \"@angular/core\";\nimport {ID} from \"../../../core/base.types\";\nimport {SPQQuestFlow, SPQQuestTaskBrief} from \"../../../core/models/quest-task.type\";\nimport {SQPQuestFlowService} from \"../services/quest-flow.service\";\nimport {SPQQuestFlowConfig} from \"../types/quest-flow.type\";\n\n@Component({\n    selector: \"spq-quest-flow\",\n    templateUrl: \"quest-flow.component.html\",\n})\nexport class SPQQuestFlowComponent implements OnInit {\n\n    @Input()\n    public values: SPQQuestFlow;\n\n    @Input()\n    public config: SPQQuestFlowConfig;\n\n    @HostBinding(\"class.spq-quest-flow\")\n    private hostClass: boolean = true;\n\n    constructor(private questService: SQPQuestFlowService) {\n    }\n\n    public ngOnInit(): void {}\n\n    public _trackCubeById(index, node: SPQQuestTaskBrief): string {\n        return node.id.toString();\n    }\n\n    public _navigateToClickedQuestDetails(questId: ID): void {\n        this.questService.navigateToQuestDetails(questId);\n    }\n}\n","import {ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output} from \"@angular/core\";\nimport {ID} from \"../../../core/base.types\";\n\n@Component({\n    selector: \"spq-quest-step-cube\",\n    templateUrl: \"quest-step-cube.component.html\",\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SPQQuestStepCubeComponent {\n\n    @Input()\n    public title: string;\n\n    @Input()\n    public subtitle: string;\n\n    @Input()\n    public serialNumber: number;\n\n    @Input()\n    public selected: boolean = false;\n\n    @Input()\n    public disabled: boolean = false;\n\n    @Input()\n    public highlighted: boolean = false;\n\n    @Input()\n    public id: ID;\n\n    @Output()\n    public onClick: EventEmitter<ID> = new EventEmitter<ID>();\n\n    @HostBinding(\"class.spq-quest-step-cube\")\n    private hostClass: boolean = true;\n\n    public _onStepCubeClick(): void {\n        if (!this.disabled) {\n            this.onClick.emit(this.id);\n        }\n    }\n}\n","import {Component, HostBinding, OnDestroy, OnInit} from \"@angular/core\";\nimport {Subscription} from \"rxjs\";\nimport {tap} from \"rxjs/operators\";\nimport {SPQQuestFlow} from \"../../core/models/quest-task.type\";\nimport {SQPQuestFlowService} from \"./services/quest-flow.service\";\n\n@Component({\n    selector: \"spq-quest\",\n    templateUrl: \"quest.component.html\",\n})\nexport class SPQQuesComponent implements OnInit, OnDestroy {\n\n    public _questFlows: SPQQuestFlow[] = [];\n\n    private subscriptions: Subscription[] = [];\n\n    @HostBinding(\"class.spq-quest\")\n    private hostClass: boolean = true;\n\n    constructor(private service: SQPQuestFlowService) {\n    }\n\n    public ngOnInit(): void {\n        this.subscribeToGetQuestFlow();\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\n    }\n\n    private subscribeToGetQuestFlow(): void {\n        this.subscriptions.push(\n            this.service.getAllQuestFlow()\n            .pipe(\n                tap(flow => {\n                    this._questFlows = flow;\n                })\n            )\n            .subscribe()\n        );\n    }\n}\n","import {CommonModule} from \"@angular/common\";\nimport {NgModule, Type} from \"@angular/core\";\nimport {MatRippleModule} from \"@angular/material\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {SQPQuestFlowDataService} from \"../../services/data/quest-data-flow.service\";\nimport {SPQQuestFlowComponent} from \"./components/quest-flow.component\";\nimport {SPQQuestStepCubeComponent} from \"./components/quest-step-cube.component\";\nimport {SPQQuesComponent} from \"./quest.component\";\nimport {SQPQuestFlowService} from \"./services/quest-flow.service\";\n\nconst QuestRoutes: Routes = [\n    {\n        path: \"\",\n        component: SPQQuesComponent\n    }\n];\n\nconst matModules: Array<Type<any>> = [\n    MatRippleModule\n];\n\n@NgModule({\n    declarations: [\n        SPQQuesComponent,\n        SPQQuestStepCubeComponent,\n        SPQQuestFlowComponent\n    ],\n    exports: [\n        SPQQuesComponent\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(QuestRoutes),\n        ...matModules\n    ],\n    providers: [\n        SQPQuestFlowDataService,\n        SQPQuestFlowService\n    ]\n\n})\nexport class SPQQuestModule {}\n","import {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs\";\nimport {SPQRoutesMap, SPQRoutesString} from \"../../../app-routers\";\nimport {ID} from \"../../../core/base.types\";\nimport {SPQQuestFlow} from \"../../../core/models/quest-task.type\";\nimport {SQPQuestFlowDataService} from \"../../../services/data/quest-data-flow.service\";\nimport {SPQNavigationService} from \"../../../services/navigation.service\";\n\n@Injectable()\nexport class SQPQuestFlowService {\n\n    constructor(private dataFlowService: SQPQuestFlowDataService,\n                private navigationService: SPQNavigationService) {\n    }\n\n    public getAllQuestFlow(): Observable<SPQQuestFlow[]> {\n        return this.dataFlowService.getAllQuestFlow();\n    }\n\n    public navigateToQuestDetails(questId: ID): void {\n        this.navigationService.navigateTo(SPQRoutesMap[SPQRoutesString.SPQ_QUEST] + \"/\" + questId);\n    }\n}\n"],"sourceRoot":"webpack:///"}