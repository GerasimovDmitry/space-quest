{"version":3,"sources":["src/app/services/data/quest-data-flow.service.ts","src/app/services/data/quest-details-data.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,QAAa,uBAAb;AAAA;;AAAA;;AADA,yCAAA;AAAA;;AAAA;;;AAGY,cAAA,WAAA,GAAc,kBAAd;AAEA,cAAA,aAAA,GAAgB,mBAAhB;AALZ;AAcC;;AAbD;AAAA;AAAA,0CAM0B;AAClB,iBAAO,KAAK,GAAL,CAAyB,KAAK,WAA9B,CAAP;AACH;AARL;AAAA;AAAA,gDAUgC;AACxB,iBAAO,KAAK,GAAL,CAA8B,KAAK,aAAnC,CAAP;AACH;AAZL;;AAAA;AAAA,MAA6C,mDAAA,CAAA,gBAAA,CAA7C,CAAA;;AAAa,IAAA,uBAAuB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CADnC,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,EACmC,CAAA,EAAvB,uBAAuB,CAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACIb,QAAa,0BAAb;AAAA;;AAAA;;AADA,4CAAA;AAAA;;AAAA;;;AAGY,eAAA,cAAA,GAAiB,MAAjB;AAEA,eAAA,aAAA,GAAgB,aAAhB;AAEA,eAAA,oBAAA,GAAuB,oBAAvB;AAEA,eAAA,iBAAA,GAAoB,aAApB;AAEA,eAAA,eAAA,GAAkB,kBAAlB;AAEA,eAAA,oBAAA,GAAuB,oBAAvB;AAbZ;AAwCC;;AAvCD;AAAA;AAAA,yCAc4B,MAd5B,EAcsC;AAC9B,iBAAO,KAAK,GAAL,CAAuB,KAAK,cAA5B,EAA4C;AAC/C,YAAA,MAAM,EAAE,IAAI,iDAAA,CAAA,YAAA,CAAJ,GAAiB,GAAjB,CAAqB,QAArB,EAA+B,MAAM,CAAC,QAAP,EAA/B;AADuC,WAA5C,CAAP;AAGH;AAlBL;AAAA;AAAA,8CAoBiC,MApBjC,EAoB2C;AACnC,iBAAO,KAAK,GAAL,CAA4B,KAAK,iBAAjC,EAAoD;AACvD,YAAA,MAAM,EAAE,IAAI,iDAAA,CAAA,YAAA,CAAJ,GAAiB,GAAjB,CAAqB,QAArB,EAA+B,MAAM,CAAC,QAAP,EAA/B;AAD+C,WAApD,CAAP;AAGH;AAxBL;AAAA;AAAA,uCA0B0B,MA1B1B,EA0BgD;AACxC,iBAAO,KAAK,IAAL,CAAkC,KAAK,aAAvC,EAAsD,MAAtD,CAAP;AACH;AA5BL;AAAA;AAAA,6CA8BgC,OA9BhC,EA8B+D;AACvD,iBAAO,KAAK,IAAL,CAA2B,KAAK,eAAhC,EAAiD,OAAjD,CAAP;AACH;AAhCL;AAAA;AAAA,kDAkCqC,MAlCrC,EAkC+C;AACvC,iBAAO,KAAK,GAAL,CAAiB,KAAK,oBAAtB,EAA4C;AAC/C,YAAA,MAAM,EAAE,IAAI,iDAAA,CAAA,YAAA,CAAJ,GAAiB,GAAjB,CAAqB,QAArB,EAA+B,MAAM,CAAC,QAAP,EAA/B;AADuC,WAA5C,CAAP;AAGH;AAtCL;;AAAA;AAAA,MAAgD,mDAAA,CAAA,gBAAA,CAAhD,CAAA;;AAAa,IAAA,0BAA0B,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CADtC,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,EACsC,CAAA,EAA1B,0BAA0B,CAA1B","sourcesContent":["import {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs\";\nimport {SPQQuestFlow, SPQQuestFlowBrief} from \"../../core/models/quest-task.type\";\nimport {SPQDataService} from \"./abstract-data.service\";\n\n@Injectable()\nexport class SQPQuestFlowDataService extends SPQDataService {\n\n    private allFlowsURL = \"section/flow/all\";\n\n    private flowBriefsURL = \"section/brief/all\";\n\n    public getAllQuestFlow(): Observable<SPQQuestFlow[]> {\n        return this.get<SPQQuestFlow[]>(this.allFlowsURL);\n    }\n\n    public getAllQuestFlowBriefs(): Observable<SPQQuestFlowBrief[]> {\n        return this.get<SPQQuestFlowBrief[]>(this.flowBriefsURL);\n    }\n}\n","import {HttpParams} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs\";\nimport {ID} from \"../../core/base.types\";\nimport {SPQQuestTask, SPQQuestTaskBrief} from \"../../core/models/quest-task.type\";\nimport {SPQQuestAnswer, SPQQuestAnswerResponse} from \"../../modules/quest-details/types/quest-answer.type\";\nimport {SPQQuestTooltip, SPQQuestTooltipRequest} from \"../../modules/quest-details/types/quest-tooltip.type\";\nimport {SPQDataService} from \"./abstract-data.service\";\n\n@Injectable()\nexport class SPQQuestDetailsDataService extends SPQDataService {\n\n    private taskDetailsUrl = \"task\";\n\n    private taskAnswerUrl = \"task/answer\";\n\n    private questAllTaskBriefUrl = \"task/brief/section\";\n\n    private questTaskBriefUrl = \"task/brief/\";\n\n    private questTooltipUrl = \"task/tooltip/lvl\";\n\n    private questTooltipCountUrl = \"task/tooltip/count\";\n\n    public getQuestTaskById(taskId: ID): Observable<SPQQuestTask> {\n        return this.get<SPQQuestTask>(this.taskDetailsUrl, {\n            params: new HttpParams().set(\"taskId\", taskId.toString())\n        });\n    }\n\n    public getQuestTaskBriefById(taskId: ID): Observable<SPQQuestTaskBrief> {\n        return this.get<SPQQuestTaskBrief>(this.questTaskBriefUrl, {\n            params: new HttpParams().set(\"taskId\", taskId.toString())\n        });\n    }\n\n    public setQuestAnswer(answer: SPQQuestAnswer): Observable<SPQQuestAnswerResponse> {\n        return this.post<SPQQuestAnswerResponse>(this.taskAnswerUrl, answer);\n    }\n\n    public getQuestTooltipByLvl(tooltip: SPQQuestTooltipRequest): Observable<SPQQuestTooltip> {\n        return this.post<SPQQuestTooltip>(this.questTooltipUrl, tooltip);\n    }\n\n    public getQuestTooltipCountByLvl(taskId: ID): Observable<number> {\n        return this.get<number>(this.questTooltipCountUrl, {\n            params: new HttpParams().set(\"taskId\", taskId.toString())\n        });\n    }\n}\n"],"sourceRoot":"webpack:///","file":"common-es5.js"}