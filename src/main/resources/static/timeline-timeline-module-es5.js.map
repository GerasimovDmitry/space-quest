{"version":3,"sources":["src/app/modules/timeline/components/card.component.html","src/app/modules/timeline/timeline.component.html","src/app/modules/timeline/components/card.component.ts","src/app/modules/timeline/sevrvices/timeline.service.ts","src/app/modules/timeline/timeline.component.ts","src/app/modules/timeline/timeline.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"spq-card__inner\\\">\\n    <mat-card class=\\\"example-card\\\">\\n        <mat-card-header>\\n            <mat-card-title>\\n                {{flowBrief.name}}\\n            </mat-card-title>\\n        </mat-card-header>\\n        <img class=\\\"spq-card__image\\\"\\n             *ngIf=\\\"flowBrief.url\\\"\\n             [src]=\\\"_safeUrl\\\"\\n             mat-card-image\\n             alt=\\\"Preview\\\">\\n        <mat-card-content>\\n            <p>{{flowBrief.text}}</p>\\n        </mat-card-content>\\n        <mat-expansion-panel class=\\\"spq-card__e-panel _no-shadow\\\"\\n                             *ngIf=\\\"_currentTaskBrief\\\"\\n                             (expandedChange)=\\\"_isCollapsed = !$event\\\">\\n            <mat-expansion-panel-header>\\n                <mat-panel-title>\\n                    {{_isCollapsed ? 'Раверните чтбы промотреть текущее задание по этой части' : 'Текущее задание'}}\\n                </mat-panel-title>\\n            </mat-expansion-panel-header>\\n            <div class=\\\"spq-card__e-panel-content\\\">\\n                <mat-list class=\\\"spq-card__task\\\">\\n                    <mat-list-item>\\n                        <div class=\\\"spq-card__task-number\\\">\\n                            {{_currentTaskBrief.serialNumber}}\\n                        </div>\\n                        <div class=\\\"spq-card__task-text\\\">\\n                            <div class=\\\"spq-card__task-text-title\\\">\\n                                {{_currentTaskBrief.title}}</div>\\n                            <div class=\\\"spq-card__task-text-subtitle\\\">\\n                                {{_currentTaskBrief.subtitle}}\\n                            </div>\\n                        </div>\\n                    </mat-list-item>\\n                    <mat-divider class=\\\"_relative\\\"></mat-divider>\\n                </mat-list>\\n                <div class=\\\"spq-card__e-panel-actions\\\">\\n                    <button mat-raised-button\\n                            color=\\\"primary\\\"\\n                            (click)=\\\"_onNavigateToQuestDetailsClick()\\\">\\n                        Перейти к заданию\\n                    </button>\\n                </div>\\n            </div>\\n        </mat-expansion-panel>\\n    </mat-card>\\n</div>\\n\"","export default \"<div class=\\\"spq-timeline__inner\\\">\\n    <spq-card class=\\\"spq-timeline__card\\\"\\n              *ngFor=\\\"let flowBrief of _questFlowBriefs\\\"\\n              [flowBrief]=\\\"flowBrief\\\">\\n    </spq-card>\\n</div>\\n\"","import {Component, HostBinding, Input, OnInit} from \"@angular/core\";\nimport {SafeResourceUrl} from \"@angular/platform-browser\";\nimport {take, tap} from \"rxjs/operators\";\nimport {SPQRoutesMap, SPQRoutesString} from \"../../../app-routers\";\nimport {SPQQuestFlowBrief, SPQQuestTaskBrief} from \"../../../core/models/quest-task.type\";\nimport {SPQNavigationService} from \"../../../services/navigation.service\";\nimport {SPQTimelineService} from \"../sevrvices/timeline.service\";\n\n@Component({\n    selector: \"spq-card\",\n    templateUrl: \"card.component.html\",\n})\nexport class SPQCardComponent implements OnInit {\n\n    @Input()\n    public flowBrief: SPQQuestFlowBrief;\n\n    public _currentTaskBrief: SPQQuestTaskBrief;\n\n    public _safeUrl: SafeResourceUrl;\n\n    public _isCollapsed: boolean = true;\n\n    @HostBinding(\"class.spq-card\")\n    private hostClass: boolean = true;\n\n    constructor(private service: SPQTimelineService,\n                private navigationService: SPQNavigationService) {\n    }\n\n    public ngOnInit(): void {\n        this._safeUrl = this.makeImageUrl();\n        this.subscribeToGetTaskBrief();\n    }\n\n    public _onNavigateToQuestDetailsClick(): void {\n        this.navigationService.navigateTo(SPQRoutesMap[SPQRoutesString.SPQ_QUEST] + \"/\" + this.flowBrief.currentTaskId);\n    }\n\n    private makeImageUrl(): SafeResourceUrl {\n        return this.service.makeSafeImageUrl(this.flowBrief.url);\n    }\n\n    private subscribeToGetTaskBrief(): void {\n        if (this.flowBrief && this.flowBrief.currentTaskId) {\n            this.service.getTaskBriefById(this.flowBrief.currentTaskId)\n                .pipe(\n                    take(1),\n                    tap(brief => {\n                        this._currentTaskBrief = brief;\n                    })\n                )\n                .subscribe();\n        }\n    }\n}\n","import {Injectable} from \"@angular/core\";\nimport {DomSanitizer, SafeResourceUrl} from \"@angular/platform-browser\";\nimport {Observable} from \"rxjs\";\nimport {ID} from \"../../../core/base.types\";\nimport {SPQQuestFlowBrief, SPQQuestTaskBrief} from \"../../../core/models/quest-task.type\";\nimport {SQPQuestFlowDataService} from \"../../../services/data/quest-data-flow.service\";\nimport {SPQQuestDetailsDataService} from \"../../../services/data/quest-details-data.service\";\n\n@Injectable()\nexport class SPQTimelineService {\n    constructor(private questFlowDataService: SQPQuestFlowDataService,\n                private questDetailsDataService: SPQQuestDetailsDataService,\n                private sanitizer: DomSanitizer) {\n    }\n\n    public getAllQuestFlowBriefs(): Observable<SPQQuestFlowBrief[]> {\n        return this.questFlowDataService.getAllQuestFlowBriefs();\n    }\n\n    public getTaskBriefById(taskId: ID): Observable<SPQQuestTaskBrief> {\n        return this.questDetailsDataService.getQuestTaskBriefById(taskId);\n    }\n\n    public makeSafeImageUrl(imageUrl): SafeResourceUrl {\n        return this.sanitizer.bypassSecurityTrustResourceUrl(this.makeImageUrl(imageUrl));\n    }\n\n    private makeImageUrl(imageUrl: string): string {\n        return this.questFlowDataService.getResourcesUrl() + imageUrl;\n    }\n}\n","import {Component, HostBinding, OnInit} from \"@angular/core\";\nimport {tap} from \"rxjs/operators\";\nimport {SPQQuestFlowBrief} from \"../../core/models/quest-task.type\";\nimport {SPQTimelineService} from \"./sevrvices/timeline.service\";\n\n@Component({\n    selector: \"spq-timeline\",\n    templateUrl: \"timeline.component.html\",\n    providers: [\n        SPQTimelineService\n    ]\n})\nexport class SPQTimelineComponent implements OnInit {\n\n    public _questFlowBriefs: SPQQuestFlowBrief[] = [];\n\n    @HostBinding(\"class.spq-timeline\")\n    private hostClass: boolean = true;\n\n    constructor(private service: SPQTimelineService) {\n    }\n\n    public ngOnInit(): void {\n       this.subscribeToGetAllQuestFlowBriefs();\n    }\n\n    private subscribeToGetAllQuestFlowBriefs(): void {\n        this.service.getAllQuestFlowBriefs()\n            .pipe(\n                tap(briefs => {\n                    this._questFlowBriefs = briefs;\n                })\n            )\n            .subscribe();\n    }\n}\n","import {CommonModule} from \"@angular/common\";\nimport {NgModule} from \"@angular/core\";\nimport {FormsModule} from \"@angular/forms\";\nimport {MatButtonModule, MatListModule} from \"@angular/material\";\nimport {MatCardModule} from \"@angular/material/card\";\nimport {MatExpansionModule} from \"@angular/material/expansion\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {SQPQuestFlowDataService} from \"../../services/data/quest-data-flow.service\";\nimport {SPQQuestDetailsDataService} from \"../../services/data/quest-details-data.service\";\nimport {SPQCardComponent} from \"./components/card.component\";\nimport {SPQTimelineComponent} from \"./timeline.component\";\n\nconst TimelineRouters: Routes = [\n    {\n        path: \"\",\n        component: SPQTimelineComponent\n    }\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule.forChild(TimelineRouters),\n        FormsModule,\n        MatButtonModule,\n        MatCardModule,\n        MatExpansionModule,\n        MatListModule\n    ],\n    declarations: [\n        SPQTimelineComponent,\n        SPQCardComponent\n    ],\n    exports: [\n        SPQTimelineComponent\n    ],\n    providers: [\n        SQPQuestFlowDataService,\n        SPQQuestDetailsDataService\n    ]\n})\nexport class SPQTimelineModule {\n}\n"],"sourceRoot":"webpack:///","file":"timeline-timeline-module-es5.js"}