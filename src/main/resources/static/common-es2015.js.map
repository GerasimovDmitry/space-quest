{"version":3,"sources":["./src/app/services/data/quest-data-flow.service.ts","./src/app/services/data/quest-details-data.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAyC;AAGc;AAGvD,IAAa,uBAAuB,GAApC,MAAa,uBAAwB,SAAQ,qEAAc;IAD3D;;QAGY,gBAAW,GAAG,kBAAkB,CAAC;QAEjC,kBAAa,GAAG,mBAAmB,CAAC;IAShD,CAAC;IAPU,eAAe;QAClB,OAAO,IAAI,CAAC,GAAG,CAAiB,IAAI,CAAC,WAAW,CAAC,CAAC;IACtD,CAAC;IAEM,qBAAqB;QACxB,OAAO,IAAI,CAAC,GAAG,CAAsB,IAAI,CAAC,aAAa,CAAC,CAAC;IAC7D,CAAC;CACJ;AAbY,uBAAuB;IADnC,gEAAU,EAAE;GACA,uBAAuB,CAanC;AAbmC;;;;;;;;;;;;;;;;;;;;ACNY;AACP;AAMc;AAGvD,IAAa,0BAA0B,GAAvC,MAAa,0BAA2B,SAAQ,qEAAc;IAD9D;;QAGY,mBAAc,GAAG,MAAM,CAAC;QAExB,kBAAa,GAAG,aAAa,CAAC;QAE9B,yBAAoB,GAAG,oBAAoB,CAAC;QAE5C,sBAAiB,GAAG,aAAa,CAAC;QAElC,oBAAe,GAAG,kBAAkB,CAAC;QAErC,yBAAoB,GAAG,oBAAoB,CAAC;IA2BxD,CAAC;IAzBU,gBAAgB,CAAC,MAAU;QAC9B,OAAO,IAAI,CAAC,GAAG,CAAe,IAAI,CAAC,cAAc,EAAE;YAC/C,MAAM,EAAE,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAC;SAC5D,CAAC,CAAC;IACP,CAAC;IAEM,qBAAqB,CAAC,MAAU;QACnC,OAAO,IAAI,CAAC,GAAG,CAAoB,IAAI,CAAC,iBAAiB,EAAE;YACvD,MAAM,EAAE,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAC;SAC5D,CAAC,CAAC;IACP,CAAC;IAEM,cAAc,CAAC,MAAsB;QACxC,OAAO,IAAI,CAAC,IAAI,CAAyB,IAAI,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;IACzE,CAAC;IAEM,oBAAoB,CAAC,OAA+B;QACvD,OAAO,IAAI,CAAC,IAAI,CAAkB,IAAI,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;IACrE,CAAC;IAEM,yBAAyB,CAAC,MAAU;QACvC,OAAO,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,oBAAoB,EAAE;YAC/C,MAAM,EAAE,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAC;SAC5D,CAAC,CAAC;IACP,CAAC;CACJ;AAvCY,0BAA0B;IADtC,gEAAU,EAAE;GACA,0BAA0B,CAuCtC;AAvCsC","file":"common-es2015.js","sourcesContent":["import {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs\";\nimport {SPQQuestFlow, SPQQuestFlowBrief} from \"../../core/models/quest-task.type\";\nimport {SPQDataService} from \"./abstract-data.service\";\n\n@Injectable()\nexport class SQPQuestFlowDataService extends SPQDataService {\n\n    private allFlowsURL = \"section/flow/all\";\n\n    private flowBriefsURL = \"section/brief/all\";\n\n    public getAllQuestFlow(): Observable<SPQQuestFlow[]> {\n        return this.get<SPQQuestFlow[]>(this.allFlowsURL);\n    }\n\n    public getAllQuestFlowBriefs(): Observable<SPQQuestFlowBrief[]> {\n        return this.get<SPQQuestFlowBrief[]>(this.flowBriefsURL);\n    }\n}\n","import {HttpParams} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs\";\nimport {ID} from \"../../core/base.types\";\nimport {SPQQuestTask, SPQQuestTaskBrief} from \"../../core/models/quest-task.type\";\nimport {SPQQuestAnswer, SPQQuestAnswerResponse} from \"../../modules/quest-details/types/quest-answer.type\";\nimport {SPQQuestTooltip, SPQQuestTooltipRequest} from \"../../modules/quest-details/types/quest-tooltip.type\";\nimport {SPQDataService} from \"./abstract-data.service\";\n\n@Injectable()\nexport class SPQQuestDetailsDataService extends SPQDataService {\n\n    private taskDetailsUrl = \"task\";\n\n    private taskAnswerUrl = \"task/answer\";\n\n    private questAllTaskBriefUrl = \"task/brief/section\";\n\n    private questTaskBriefUrl = \"task/brief/\";\n\n    private questTooltipUrl = \"task/tooltip/lvl\";\n\n    private questTooltipCountUrl = \"task/tooltip/count\";\n\n    public getQuestTaskById(taskId: ID): Observable<SPQQuestTask> {\n        return this.get<SPQQuestTask>(this.taskDetailsUrl, {\n            params: new HttpParams().set(\"taskId\", taskId.toString())\n        });\n    }\n\n    public getQuestTaskBriefById(taskId: ID): Observable<SPQQuestTaskBrief> {\n        return this.get<SPQQuestTaskBrief>(this.questTaskBriefUrl, {\n            params: new HttpParams().set(\"taskId\", taskId.toString())\n        });\n    }\n\n    public setQuestAnswer(answer: SPQQuestAnswer): Observable<SPQQuestAnswerResponse> {\n        return this.post<SPQQuestAnswerResponse>(this.taskAnswerUrl, answer);\n    }\n\n    public getQuestTooltipByLvl(tooltip: SPQQuestTooltipRequest): Observable<SPQQuestTooltip> {\n        return this.post<SPQQuestTooltip>(this.questTooltipUrl, tooltip);\n    }\n\n    public getQuestTooltipCountByLvl(taskId: ID): Observable<number> {\n        return this.get<number>(this.questTooltipCountUrl, {\n            params: new HttpParams().set(\"taskId\", taskId.toString())\n        });\n    }\n}\n"],"sourceRoot":"webpack:///"}